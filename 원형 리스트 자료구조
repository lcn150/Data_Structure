#include<stdio.h>
#include<stdlib.h>
typedef int element;
typedef struct ListNode {
	element data;
	struct ListNode* link;
}ListNode;
ListNode* create_node(element data, ListNode* link) {
	ListNode* new_node;
	new_node = (ListNode*)malloc(sizeof(ListNode));
	new_node->data = data;
	new_node->link = link;
	return new_node;
}
void insert_first(ListNode* *phead, ListNode* new_node) {  //리스트의 처음에 삽입하는 함수
	if (*phead == NULL) {   //첫번째 노드라면
		*phead = new_node;
		new_node->link = new_node;   //노드의 링크는 자기자신을 가리킨다. 원형 노드
	}
	else {  //두번째 이상의 노드  노드가 중간에 왔을때
		new_node->link = (*phead)->link;
		(*phead)->link = new_node;
	}
}
void display(ListNode* head) {
	ListNode* p = head;
	if (head == NULL)     //아무것도 없을 때 리턴
		return;
	do {
		printf("%d \n", p->data);
		p = p->link;
	} while (p != head);   //p가 head까지 왔을때(처음위치로 왔을때)
}
int main() {
	ListNode*list1 = NULL;
	insert_first(&list1, create_node(10, NULL));
	insert_first(&list1, create_node(20, NULL));
	insert_first(&list1, create_node(30, NULL));
	display(list1);      //10 30 20
}
