#include<stdio.h>   //n1, n2, n3
#include<stdlib.h>
typedef struct TreeNode {
	struct TreeNode* left;
	int data;
	struct TreeNode* right;
}TreeNode;
TreeNode n1 = { NULL, 1, NULL };
TreeNode n2 = { NULL, 4, NULL };
TreeNode n3 = { &n1, '*', &n2 };
TreeNode n4 = { NULL, 16, NULL };
TreeNode n5 = { NULL, 25, NULL };
TreeNode n6 = { &n4, '+', &n5 };
TreeNode* root = &n6;   //루트 생성
TreeNode n7 = { &n3, '+', &n6 };
TreeNode* exp = &n7;

void preorder(TreeNode* root) {
	if (root) {
		printf("%4d", root->data);  //루트노드 방문
		preorder(root->left);        //왼쪽노드 방문
		preorder(root->right);       //오른쪽노드 방문
	}
}
void inorder(TreeNode* root) {
	if (root) {
		inorder(root->left);
		printf("%4d", root->data);
		inorder(root->right);
	}
}
void postorder(TreeNode* root) {
	if (root) {
		postorder(root->left);
		postorder(root->right);
		printf("%4d", root->data);
	}
}
int evaluate(TreeNode* root) {
	if (root == NULL) {
		return 0;
	}
	if (root->left == NULL && root->right == NULL) {
		return root->data;
	}
	else {
		int op1 = evaluate(root->left);     //왼쪽정수
		int op2 = evaluate(root->right);     //오른쪽정수
		switch (root->data) {
		case'+': return op1 + op2;
		case'-': return op1 - op2;
		case'*': return op1 * op2;
		case'/': return op1 / op2;
		}
	}
	return 0;
}

int main() {
	printf("수식계산 결과: %d", evaluate(exp));	  //45
}
